version: "3"

services:
  kong-database:
    image: postgres:11
    networks:
      - kong-net
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: always
    stdin_open: true
    tty: true

  kong-migrations:
    image: kong:latest
    networks:
      - kong-net
    depends_on:
      - kong-database

    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=${KONG_PG_HOST:-kong-database}
      - KONG_PG_USER=${KONG_PG_USER:-kong}
      - KONG_PG_PASSWORD=${KONG_PG_PASSWORD:-kong}
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations up

  kong:
    image: kong:latest
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    networks:
      - kong-net
    depends_on:
      - kong-database
    command: >
      sh -c "kong migrations up && sh /docker-entrypoint.sh kong docker-start"
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=${KONG_PG_HOST:-kong-database}
      - KONG_PG_USER=${KONG_PG_USER:-kong}
      - KONG_PG_PASSWORD=${KONG_PG_PASSWORD:-kong}
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_LISTEN_SSL= 0.0.0.0:8444
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
    restart: always

  kong-dashboard:
    image: pgbi/kong-dashboard:v2
    ports:
      - "8080:8080"
    networks:
      - kong-net
    depends_on:
      - kong
networks:
  kong-net:
